impl Solution {
    pub fn find_array(pref: Vec<i32>) -> Vec<i32> {
        let mut res = pref.windows(2).map(|a| a[0] ^ a[1]).collect::<Vec<_>>();

        res.insert(0, pref[0]);

        res
    }
}





// 0^a = 0 => a=0 --> 0*0=0
// 0^a = 1 => a=1 --> 0*1=1
// 1^a = 0 => a=1 --> 1*0=1
// 1^a = 1 => a=0 --> 1*1=0

//   5 ^   2 = 7         5 ^   7 =   2
// 101 ^ 010 = 111  -> 101 ^ 111 = 010 


// 0^a = 0 => a=0 --> 0*0=0
// 0^a = 1 => a=1 --> 0*1=1
// 1^a = 0 => a=1 --> 1*0=1
// 1^a = 1 => a=0 --> 1*1=0

//   5 ^   2 = 7         5 ^   7 =   2
// 101 ^ 010 = 111  -> 101 ^ 111 = 010 
